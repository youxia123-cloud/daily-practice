# -*- coding: utf-8 -*-
"""sklearn_study1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Vlwg_OMmkpNSdn5huDQI5wUddTMh3cDO
"""

# 线性回归
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
# 大写字母表示矩阵，小写字母表示向量
X = np.array([[6],[8],[10],[14],[18]]).reshape(-1,1)
# X表示训练的数据的特征，即表示披萨的直径的矩阵
print(X)
# y是一个表示披萨价格的向量
y = [7,9,13,17.5,18]
plt.figure()
plt.title('Pizza price plotted against diameter')
plt.xlabel('Diameter in inches')
plt.ylabel('price in dollars')
plt.plot(X,y,'k.')
plt.axis([0,25,0,25])
plt.grid(True)
plt.show()
# 创建一个估计器实例
model = LinearRegression()
model.fit(X,y)
test_pizza = np.array([[12]])
predicted_price = model.predict(test_pizza)[0]
# 预测一个直径之前从未见过的披萨的价格
print("A 12 pizza should cost :$%.2f" %predicted_price)
# 计算模型的残差平方和
print('Residul sum of squares:%.2f'%np.mean((model.predict(X)-y)**2))