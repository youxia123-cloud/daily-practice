# -*- coding: utf-8 -*-
"""Tensorflow_study6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17LU8vmiqP3K6YM0nS1YlwiOhS2o_WEyo
"""

# 构建批标准化模型
import ssl
from tensorflow import keras
from tensorflow.keras import layers
import matplotlib.pyplot as plt
# 由于是HTTPS协议域名，需要添加相应的证书
ssl._create_default_https_context = ssl._create_unverified_context
# 导入MNIST数据集
(x_train,y_train),(x_test,y_test) = keras.datasets.mnist.load_data()
x_train = x_train.reshape([x_train.shape[0],-1])
x_test = x_test.reshape([x_test.shape[0],-1])
# 对每个层进行标准化，具体参数为layers.BatchNormalization()
model = keras.Sequential([
    layers.Dense(64,activation='relu',input_shape=(784,)),
    layers.BatchNormalization(),
    layers.Dense(64,activation='relu'),
    layers.BatchNormalization(),
    layers.Dense(64,activation='relu'),
    layers.BatchNormalization(),
    layers.Dense(10,activation='softmax')
])
# 编译模型
model.compile(optimizer=keras.optimizers.SGD(),loss=keras.losses.SparseCategoricalCrossentropy(),metrics=['accuracy'])
# 打印各层情况
model.summary()
# 制定训练计划，训练100次
history = model.fit(x_train,y_train,batch_size=256,epochs=100,validation_split=0.3,verbose=0)
# 打印输出成果
plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])
plt.legend(['training','validation'],loc='upper left')
plt.show()
result = model.evaluate(x_test,y_test)